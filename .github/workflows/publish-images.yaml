name: Publish Images

on:
  pull_request:
    types: [closed]
    branches: [main]

env:
  DJANGO_APP_DOCKER_REPOSITORY: web-apps-infra

jobs:
  get-new-release-tag:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.bump-semver.outputs.new_version }}
    steps:
    - uses: actions/checkout@v2

    - uses: actions-ecosystem/action-release-label@v1
      id: release-label
      if: ${{ github.event.pull_request.merged == true }}

    - uses: actions-ecosystem/action-get-latest-tag@v1
      id: get-latest-tag
      with:
        semver_only: true
      if: ${{ steps.release-label.outputs.level != null }}
    - uses: actions-ecosystem/action-bump-semver@v1
      id: bump-semver
      if: ${{ steps.release-label.outputs.level != null }}
      with:
        current_version: ${{ steps.get-latest-tag.outputs.tag }}
        level: ${{ steps.release-label.outputs.level }}

  publish-django-image:
    needs: get-new-release-tag
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # provisioned by web-apps-infra
          # module.github-oidc.oidc_role
          role-to-assume: ${{ secrets.AWS_OIDC_PROVIDER_ROLE }} 
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
  
      - name: Build, tag, and push docker image to Amazon ECR
        working-directory: backend
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.DJANGO_APP_DOCKER_REPOSITORY }}
          IMAGE_TAG: ${{needs.get-new-release-tag.outputs.release_version}}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f dockerfiles/backend.Dockerfile .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  publish-github-tag:
    permissions: write-all
    needs: 
      - get-new-release-tag
      - publish-django-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions-ecosystem/action-get-latest-tag@v1
        with:
          semver_only: true

      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{needs.get-new-release-tag.outputs.release_version}}
          message: '${{needs.get-new-release-tag.outputs.release_version}}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'